(()=>{"use strict";class t{static frequencyLookup={c:261.63,"c#":277.18,d:293.66,"d#":311.13,e:329.63,f:349.23,"f#":369.99,g:392,"g#":415.3,a:440,"a#":466.16,b:493.88};constructor(t,e){this.note=t,this.octave=e;const a=this.frequencyLookup[t];if(!this.baseFrequency)throw new Error("that note does not exist, only sharps are accepted");this.frequency=a*Math.pow(2,e)}static NoteFromFequency(){Object.values(t.frequencyLookup).filter()}}class e{constructor(t,e){this.steps=t,this.startingNote=e}getNoteAtScaleStep(e){const a=Math.floor(e/this.steps.length),s=steps[e%this.steps.length],o=(Object.keys(t.frequencyLookup).indexOf(this.startingNote.note)+s)%12,[i]=Object.entries(t.frequencyLookup)[o];return new t(i,a)}}class a{constructor({stemHeight:t,petalCurve:e,petalWidth:a,petalHeight:s,petalColor:o,petalCount:i,headScalePattern:n,scale:h}){this.stemHeight=t,this.petalCurve=e,this.petalWidth=a,this.petalHeight=s,this.petalColor=o,this.petalCount=i,this.headScalePattern=n,this.scale=h}static getSerialization(){}static MergeFlowerData(t,e){}static RandomFlowerData(){return new a({stemHeight:Math.floor(24*Math.random()),petalCurve:2*Math.random(),petalWidth:200*Math.random()+100,petalHeight:200*Math.random()+400,petalColor:[Math.floor(255*Math.random()),Math.floor(255*Math.random()),Math.floor(255*Math.random())],petalCount:[2,4,8,16][Math.floor(4*Math.random())],headScalePattern:[0],scale:("c",new e([0,2,4,5,7,9,11],"c"))})}}class s{constructor(t,e,a){this.state=a,this.data=e,this.ctx=t}draw(){const t=15*this.data.stemHeight+200;this.ctx.translate(this.state.position,t),this.drawStem(20,t),this.drawPetals(),this.drawHead(),this.ctx.translate(-1*this.state.position,-1*t),console.log("drew"),console.log({data:this.data})}drawStem(t,e){this.ctx.fillStyle="#73ba8d",this.ctx.fillRect(-.5*t,0,.5*t,flowerCanvas.height-e)}drawPetals(){for(var t=Math.PI/180,e=0;e<this.data.petalCount;e++){const e=this.data.petalColor,a=`#${e[0].toString(16)}${e[1].toString(16)}${e[2].toString(16)}AA`;this.ctx.fillStyle=a,this.ctx.beginPath(),this.ctx.moveTo(0,0),this.ctx.quadraticCurveTo(this.data.petalCurve*this.data.petalWidth,this.data.petalHeight,this.data.petalWidth,0),this.ctx.moveTo(0,0),this.ctx.quadraticCurveTo(this.data.petalCurve*this.data.petalWidth,-1*this.data.petalHeight,this.data.petalWidth,0),this.ctx.fill(),this.ctx.rotate(t*(360/this.data.petalCount))}this.ctx.rotate(t*(360-360/this.data.petalCount*e))}drawHead(){this.ctx.fillStyle="#fced7e",this.ctx.beginPath(),this.ctx.arc(0,0,15,0,2*Math.PI),this.ctx.fill()}}class o{constructor({currentStep:t,position:e}){this.currentStep=t||0,this.position=e||0}}class i{constructor(t){this.state=new o({position:500}),this.data=a.RandomFlowerData(),this.visualizer=new s(t,this.data,this.state)}}const n=[];function h(t){document.getElementById("flowerCanvas"),n.forEach((t=>{t.visualizer.draw()}))}function r(){const t=document.getElementById("flowerCanvas"),e=window.innerHeight,a=window.innerWidth;t.setAttribute("width",a),t.setAttribute("height",e)}window.onload=function(){console.log("started"),function(){const t=document.getElementById("flowerCanvas");if(!t)throw new Error("could not find flower Canvas");const e=t.getContext("2d");if(!t)throw new Error("could not get context");n.push(new i(e)),r(),window.onresize=function(t){r(),updateCanvas()},h(),window.setInterval((()=>{h()}),1e3)}()}})();